pipeline {
    agent any
    
    environment {
        PYTHON_VERSION = '3.9'
        DJANGO_SETTINGS_MODULE = 'hrSystem.settings'
        PATH = "/usr/local/bin:/usr/bin:/bin:${env.PATH}"
    }
    
    
    stages {
        stage('Check Files') {
            steps {
                sh 'ls -la'  // Debug: List all files
                sh 'pwd'
            }
        }
        stage('Setup') {
            steps {
                dir('hrSystem'){
                    sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt -r requirements_test.txt
                    pip install djangorestframework
                '''
                }                
            }
        }       
        stage('Test') {
            steps {
                sh 'mkdir -p test-reports'
                sh 'python manage.py behave -f json -o test-reports/behave.json'
                sh 'python manage.py test --junitxml=test-reports/junit.xml'
                dir('hrSystem'){
                    sh '''
                        python3 -m venv venv
                        . venv/bin/activate
                        python manage.py makemigrations
                        python manage.py migrate
                        python manage.py dumpdata hr.Employee hr.Department --indent=2 > fixtures/test_data.json
                        python manage.py behave --out reports/behave
                        python manage.py test
                    '''
                }
            }
            post {
                always {
                    junit '**/test-reports/*.xml'
                    publishHTML target: [
                        allowMissing: true,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'reports/behave',
                        reportFiles: 'index.html',
                        reportName: 'BDD Report'
                    ]
                }
            }
        }
        
        stage('Deploy') {
            when {
                branch 'main'
            }
            steps {
                sh 'docker build -t hr-system .'
                sh 'docker-compose up -d'
            }
        }
    }
}